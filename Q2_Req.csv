Application Gateway Security Requirements,Rationale,Review Notes,Column1
Application Gateway {INSTANCE_NAME} shall enforce one way TLS encryption from {Client Name} to the front end listener.,,Split requirement,
Application Gateway {INSTANCE_NAME} shall enable encrypted communication from the front end listener to the backend pool by setting the protocol setting in Backend HTTP Setting to HTTPS.,,Split requirement,
Application Gateway {INSTANCE_NAME} Backend HTTP Setting shall use a unique to device Edwards private certificate to authenticate the backend pool {Pool_Name},,Split requirement,
Application Gateway {INSTANCE_NAME} Backend HTTP Setting shall use a unique to device Edwards private certificate for listener TLS termination.,,Split requirement,
The certificate added to Backend HTTP Setting of Application Gateway {INSTANCE_NAME} used to authenticate the backend server shall be a different certificate added to the listener for TLS termination.,,Split requirement,
"Application Gateway {INSTANCE_NAME} shall terminate TLS sessions at the gateway and initiate a new TLS connection to the backend pool, re-encrypting the data using the backend server's public key certificate before transmitting the request to the backend.",,Split requirement,
Application Gateway {INSTANCE_NAME} shall enforce mutual TLS authentication for incoming connections from the {CLIENT_NAME}.,,"We will need a comment associated with this requirement, since the way I see it - it would almost never be achievable. AppGW is typically exposed to Web/Mobile traffic, situation where you can't do mTLS. But if instead of APIM Hub will start connecting to AppGW directly, there would be scenario like this. Added Note",
Note: This is only applicable to system to system authentication and NOT from a browser or mobile app,,,
Application Gateway {INSTANCE_NAME} shall be configured to only support TLS v1.2 or greater for all connections.,,,
"All Legacy transport layer security protocol versions such as SSL 3.0, TLS v1.0 and TLS 1.1 shall be disabled.",,,
Connections to Application Gateway {INSTANCE_NAME} listeners shall be configured to allow HTTP/2 protocol only,,,
Application Gateway {INSTANCE_NAME} shall enforce listener redirection for all insecure HTTP traffic to Secure HTTP (HTTPS).,,,
Application Gateway {INSTANCE_NAME} shall disable Error page URL's,,"Application Gateway allows you to create custom error pages instead of displaying default error pages. Is there a need to return an error page? If yes, we need to specify what error page to redirect the user to.",
Application Gateway {INSTANCE_NAME} shall restrict redirection to external sites and domains only to {DOMAIN_LIST},,Should we be more specific here? What external sites are OK and what are not? Based on what principle the judgment is made? List will be determined by specific architecture and need,
Application Gateway {INSTANCE_NAME} shall block all incoming traffic that does not match predefined Application Gateway request routing rules.,,What rules? This is not to define what rules shall be enabled but rather a default deny approach. Rule definition is dependent on application function and not security defined.,
Application Gateway {INSTANCE_NAME} shall only allow {PROTOCOL_NAME(S)} and {PORT_NUMBER(S)} for all inbound connections to application gateway.,,Split inbound from outbound,
Application Gateway {INSTANCE_NAME} shall only allow {PROTOCOL_NAME(S)} and {PORT_NUMBER(S)} for all outbound connections to the  backend pools.,,Split inbound from outbound,
Application Gateway {INSTANCE_NAME} shall use Azure role-based access control to grant specific permissions to managed identities in order to limit who can manage and configure the Application Gateway.,,What access controls? Added clarity,
All inbound traffic to Application Gateway {INSTANCE_NAME} shall traverse a Web Application Firewall (WAF) to protect against owasp top 10 common web vulnerabilities.,,What common web-based attacks? Added clarity,
Application Gateway {INSTANCE_NAME} shall have anti-DDoS protection to protect against distributed denial-of-service attacks.,,,
Application Gateway {INSTANCE_NAME} shall monitor and log audit related events for analysis and auditing purposes.,"Audit logs provide information about the activity that occurs within the service e.g., connections, messages sent and received, and other events related to real time. The logs are leveraged for Incident Detection and Response.",,
Application Gateway {INSTANCE_NAME} shall enable SSL/TLS offloading to reduce server overhead.,,,
"Application Gateway {INSTANCE_NAME} shall store all keys, secrets, and certificates in Azure Key Vault.",,I think placeholders for specific keys and secrets and certs needs to be held there.. Coupled with short note on what they can be overall and where they would be kept otherwise,
Application Gateway {INSTANCE_NAME}'s appGatewayBackendHttpSettings shall Enable Cookie based affinity.,,Achieving what security goal?,
Application Gateway {INSTANCE_NAME}'s appGatewayBackendHttpSettings shall Enable Connection draining.,,Achieving what security goal?,
Application Gateway {INSTANCE_NAME} shall use backend authentication certificates signed by a trusted root CA and an intermediate certificate signed by Edwards.,,,
Application Gateway {INSTANCE_NAME} shall use IP restrictions to limit traffic to specific IP addresses or ranges.,,"This should have placeholders, otherwise it is not testable",
Programmatic access to the Application Gateway {INSTANCE_NAME} shall use managed identities,,"Do you mean node to node communication, l7 on top of mutual authentication at l4 using x509 certs? - Developer management of API gateway programmatically",
Application Gateway {INSTANCE_NAME} shall enable Microsoft Defender for monitoring and alerting.,,Any specific configuration?,
Application Gateway {INSTANCE_NAME} shall configure health probes over secure HTTP with the below configuration:,Promotes availability of the application by testing the health of the backend pool before sending requests.,Achieving what security goal?,
Interval: 30 seconds,,,
Timeout: 30 seconds,,,
Unhealthy threshold: 3,,,
All traffic to Application Gateway {INSTANCE_NAME} shall utilize a private endpoint.,Allows virtual network resources to privately connect to Application gateway as if they were part of the same subnet. ,Achieving what security goal?,
Application Gateway {INSTANCE_NAME} shall disable direct public access and leverage a private frontend IP address.,Reduces Application Gateway's attack surface by blocking public access and limiting access only through private subnets.,Achieving what security goal?,
Application Gateway {INSTANCE_NAME} v2 shall be used for all Application Gateway deployments.,"Application Gateway V2 supports Azure Key Vault integration, Azure Kubernetes Service (AKS) Ingress controller, Autoscaling, Zone redundancy, Static VIP, Rewrite HTTP(S) headers and WAF custom rules, which V1 does not.",Achieving what security goal?,
Application Gateway {INSTANCE_NAME} shall be configured to sit in its own private subnet {SUBNET_NAME},Allows for network segmentation and resource isolation.,Placeholder for subnet name - added,
Application Gateway {INSTANCE_NAME} shall be associated with a network Secuity group with a defined access control list limiting access only to {RESOURCE_LIST},Limits access only  from approved clients/endpoints,"Achieving what security goal? Network security group and defined access controls lists should be placeholders, unless you know what this access control list would be",
Application Gateway {INSTANCE_NAME} private subnet {SUBNET_NAME} shall be configured with a network security group {NSG_NAME},Limits access only  from approved clients/endpoints,,
All traffic to and from Application Gateway {INSTANCE_NAME} subnet {SUBNET_NAME} shall be controlled via Network security group {NSG_NAME},Limits access only  from approved clients/endpoints,Placeholder for subnet name and missing configuration for NSG on this subnet,
Application Gateway {INSTANCE_NAME} shall only accept connections from {CLIENT_NAME},Limits access only  from approved clients/endpoints,"Who should be talking to AppGW? Who shouldn't be? Is it one way comm or not? How L7 level authentication is expected to happen? Is it expected to happen? If so, would we expect authorization to happen too? On what interface? Do we have all incoming traffic to pass through NGFW? On what interfaces? ",
,,,
,,,
,,,
